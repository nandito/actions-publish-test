name: Publish Package to npmjs
on:
    release:
        types: [created]
jobs:
    get_version_tag:
        runs-on: ubuntu-latest
        outputs:
            tag: ${{ steps.tag_check.outputs.tag }}
        steps:
            - uses: actions/checkout@v3
            - name: Get version tag
              id: tag_check
              # 1st sed: remove major.minor.patch numbers
              # 2nd sed: remove wrapper quotes
              # 3rd sed: remove "-" and tag version if exists
              run: |
                  TAG=$(npm pkg get version \
                  | sed 's/\([0-9]*\.[0-9]*\.[0-9]*\)//' \
                  | sed 's/^"\(.*\)"$/\1/' \
                  | sed 's/-\([a-z]*\)\([0-9]*\)/\1/') 
                  echo "tag=$TAG" >> $GITHUB_OUTPUT
    main_only:
        needs: get_version_tag
        if: ${{ needs.get_version_tag.outputs.tag == 0 }}
        runs-on: ubuntu-latest
        steps:
            - run: echo "This only runs for `latest` versions"
    publish:
        needs: get_version_tag
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            # Setup .npmrc file to publish to npm
            - uses: actions/setup-node@v3
              with:
                  node-version: "16.x"
                  registry-url: "https://registry.npmjs.org"
            - name: Publish
              run: |
                  TAG=${{ needs.get_version_tag.outputs.tag }}
                  if [[ -z ${TAG} ]]; then
                      echo "deploy with latest tag"
                      npm publish
                  else
                      echo "deploy with ${{ needs.get_version_tag.outputs.tag }} tag"
                      npm publish --tag ${{ needs.get_version_tag.outputs.tag }}
                  fi
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
